# h2xs.1perl
# Autogenerated from man page /usr/share/man/man1/h2xs.1perl.gz
complete -c 'h2xs.1perl' -s A -l omit-autoload -d 'X Item "-A, --omit-autoload" Omit all autoload facilities'
complete -c 'h2xs.1perl' -s B -l beta-version -d 'X Item "-B, --beta-version" Use an alpha/beta style version number'
complete -c 'h2xs.1perl' -s C -l omit-changes -d 'X Item "-C, --omit-changes" Omits creation of the Changes file, and adds a HI…'
complete -c 'h2xs.1perl' -s F -l cpp-flags -d 'X Item "-F, --cpp-flags=addflags" Additional flags to specify to C preprocess…'
complete -c 'h2xs.1perl' -s M -l func-mask -d 'X Item "-M, --func-mask=regular expression" selects functions/macros to proce…'
complete -c 'h2xs.1perl' -s O -l overwrite-ok -d 'X Item "-O, --overwrite-ok" Allows a pre-existing extension directory to be o…'
complete -c 'h2xs.1perl' -s P -l omit-pod -d 'X Item "-P, --omit-pod" Omit the autogenerated stub POD section'
complete -c 'h2xs.1perl' -s X -l omit-XS -d 'X Item "-X, --omit-XS" Omit the XS portion'
complete -c 'h2xs.1perl' -s a -l gen-accessors -d 'X Item "-a, --gen-accessors" Generate an accessor method for each element of …'
complete -c 'h2xs.1perl' -s b -l compat-version -d 'X Item "-b, --compat-version=version" Generates a '
complete -c 'h2xs.1perl' -s c -l omit-constant -d 'X Item "-c, --omit-constant" Omit \\f(CWconstant() from the '
complete -c 'h2xs.1perl' -s d -l debugging -d 'X Item "-d, --debugging" Turn on debugging messages'
complete -c 'h2xs.1perl' -s e -l omit-enums -d 'X Item "-e, --omit-enums=[regular expression]" If regular expression is not g…'
complete -c 'h2xs.1perl' -s f -l force -d 'X Item "-f, --force" Allows an extension to be created for a header even if t…'
complete -c 'h2xs.1perl' -s g -l global -d 'X Item "-g, --global" Include code for safely storing static data in the '
complete -c 'h2xs.1perl' -s h -s '?' -l help -d 'X Item "-h, -?, --help" Print the usage, help and version for this h2xs and e…'
complete -c 'h2xs.1perl' -s k -l omit-const-func -d 'X Item "-k, --omit-const-func" For function arguments declared as \\f(CW\\*(C`c…'
complete -c 'h2xs.1perl' -s m -l gen-tied-var -d 'X Item "-m, --gen-tied-var" Experimental: for each variable declared in the h…'
complete -c 'h2xs.1perl' -s n -l name -d 'X Item "-n, --name=module_name" Specifies a name to be used for the extension…'
complete -c 'h2xs.1perl' -s o -l opaque-re -d 'X Item "-o, --opaque-re=regular expression" Use "opaque" data type for the C …'
complete -c 'h2xs.1perl' -s p -l remove-prefix -d 'X Item "-p, --remove-prefix=prefix" Specify a prefix which should be removed …'
complete -c 'h2xs.1perl' -s s -l const-subs -d 'X Item "-s, --const-subs=sub1,sub2" Create a perl subroutine for the specifie…'
complete -c 'h2xs.1perl' -s t -l default-type -d 'X Item "-t, --default-type=type" Specify the internal type that the constant(…'
complete -c 'h2xs.1perl' -l use-new-tests -d 'X Item "--use-new-tests" When --compat-version (-b) is present the generated …'
complete -c 'h2xs.1perl' -l use-old-tests -d 'X Item "--use-old-tests" Will force the generation of test code that uses the…'
complete -c 'h2xs.1perl' -l skip-exporter -d 'X Item "--skip-exporter" Do not use \\f(CW\\*(C`Exporter\\*(C\' and/or export any…'
complete -c 'h2xs.1perl' -l skip-ppport -d 'X Item "--skip-ppport" Do not use \\f(CW\\*(C`Devel::PPPort\\*(C\': no portabilit…'
complete -c 'h2xs.1perl' -l skip-autoloader -d 'X Item "--skip-autoloader" Do not use the module \\f(CW\\*(C`AutoLoader\\*(C\'; b…'
complete -c 'h2xs.1perl' -l skip-strict -d 'X Item "--skip-strict" Do not use the pragma \\f(CW\\*(C`strict\\*(C\''
complete -c 'h2xs.1perl' -l skip-warnings -d 'X Item "--skip-warnings" Do not use the pragma \\f(CW\\*(C`warnings\\*(C\''
complete -c 'h2xs.1perl' -s v -l version -d 'X Item "-v, --version=version" Specify a version number for this extension'
complete -c 'h2xs.1perl' -s x -l autogen-xsubs

