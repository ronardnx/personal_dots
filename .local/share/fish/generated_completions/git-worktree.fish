# git-worktree
# Autogenerated from man page /usr/share/man/man1/git-worktree.1.gz
complete -c git-worktree -s f -l force -d 'By default, add refuses to create a new worktree when <commit-ish> is a branc…'
complete -c git-worktree -s b -s B -d 'With add, create a new branch named <new-branch> starting at <commit-ish>, an…'
complete -c git-worktree -s d -l detach -d 'With add, detach HEAD in the new worktree'
complete -c git-worktree -l checkout -d 'By default, add checks out <commit-ish>, however, --no-checkout can be used t…'
complete -c git-worktree -l guess-remote -d 'With worktree add <path>, without <commit-ish>, instead of creating a new bra…'
complete -c git-worktree -l track -d 'When creating a new branch, if <commit-ish> is a branch, mark it as "upstream…'
complete -c git-worktree -l lock -d 'Keep the worktree locked after creation'
complete -c git-worktree -s n -l dry-run -d 'With prune, do not remove anything; just report what it would remove'
complete -c git-worktree -l orphan -d 'With add, make the new worktree and index empty, associating the worktree wit…'
complete -c git-worktree -l porcelain -d 'With list, output in an easy-to-parse format for scripts'
complete -c git-worktree -s z -d 'Terminate each line with a NUL rather than a newline when --porcelain is spec…'
complete -c git-worktree -s q -l quiet -d 'With add, suppress feedback messages'
complete -c git-worktree -s v -l verbose -d 'With prune, report all removals'
complete -c git-worktree -l expire -d 'With prune, only expire unused worktrees older than <time>'
complete -c git-worktree -l reason -d 'With lock or with add --lock, an explanation why the worktree is locked'
complete -c git-worktree -o f/--force -d list
complete -c git-worktree -l no-checkout -d 'can be used to suppress checkout in order to make customizations, such as con…'

