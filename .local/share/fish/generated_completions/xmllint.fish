# xmllint
# Autogenerated from man page /usr/share/man/man1/xmllint.1.gz
complete -c xmllint -l auto -d 'Generate a small document for testing purposes'
complete -c xmllint -l catalogs -d 'Use the SGML catalog(s) from SGML_CATALOG_FILES'
complete -c xmllint -l chkregister -d 'Turn on node registration'
complete -c xmllint -l compress -d 'Turn on gzip(1) compression of output'
complete -c xmllint -l copy -d 'Test the internal copy implementation'
complete -c xmllint -l c14n -d 'Use the W3C XML Canonicalisation (C14N) to serialize the result of parsing to…'
complete -c xmllint -l dtdvalid -d 'Use the DTD specified by an URL for validation'
complete -c xmllint -l dtdvalidfpi -d 'Use the DTD specified by a Formal Public Identifier FPI for validation, note …'
complete -c xmllint -l debug -d 'Parse a file and output an annotated tree of the in-memory version of the doc…'
complete -c xmllint -l debugent -d 'Debug the entities defined in the document'
complete -c xmllint -l dropdtd -d 'Remove DTD from output'
complete -c xmllint -l dtdattr -d 'Fetch external DTD and populate the tree with inherited attributes'
complete -c xmllint -l encode -d 'Output in the given encoding'
complete -c xmllint -l format -d 'Reformat and reindent the output'
complete -c xmllint -l help -d 'Print out a short usage summary for xmllint'
complete -c xmllint -l html -d 'Use the HTML parser'
complete -c xmllint -l htmlout -d 'Output results as an HTML file'
complete -c xmllint -l insert -d 'Test for valid insertions'
complete -c xmllint -l loaddtd -d 'Fetch an external DTD'
complete -c xmllint -l load-trace -d 'Display all the documents loaded during the processing to stderr'
complete -c xmllint -l maxmem -d 'Test the parser memory support'
complete -c xmllint -l memory -d 'Parse from memory'
complete -c xmllint -l noblanks -d 'Drop ignorable blank spaces'
complete -c xmllint -l nocatalogs -d 'Do not use any catalogs'
complete -c xmllint -l nocdata -d 'Substitute CDATA section by equivalent text nodes'
complete -c xmllint -l nodict -d 'Don\\*(Aqt use dictionaries (parser option XML_PARSE_NODICT)'
complete -c xmllint -l noent -d 'Substitute entity values for entity references'
complete -c xmllint -l nonet -d 'Do not use the Internet to fetch DTDs or entities'
complete -c xmllint -l noout -d 'Suppress output.  By default, xmllint outputs the result tree'
complete -c xmllint -l nowarning -d 'Do not emit warnings from the parser and/or validator'
complete -c xmllint -l nowrap -d 'Do not output HTML doc wrapper'
complete -c xmllint -l noxincludenode -d 'Do XInclude processing but do not generate XInclude start and end nodes'
complete -c xmllint -l nsclean -d 'Remove redundant namespace declarations'
complete -c xmllint -l output -d 'Define a file path where xmllint will save the result of parsing'
complete -c xmllint -l path -d 'Use the (space- or colon-separated) list of filesystem paths specified by PAT…'
complete -c xmllint -l pattern -d 'Used to exercise the pattern recognition engine, which can be used with the r…'
complete -c xmllint -l pedantic -d 'Enable additional warnings'
complete -c xmllint -l postvalid -d 'Validate after parsing has completed'
complete -c xmllint -l push -d 'Use the push mode of the parser'
complete -c xmllint -l quiet -d 'Don\\*(Aqt print informational messages to stderr'
complete -c xmllint -l recover -d 'Output any parsable portions of an invalid document'
complete -c xmllint -l relaxng -d 'Use RelaxNG file named SCHEMA for validation'
complete -c xmllint -l repeat -d 'Repeat 100 times, for timing or profiling'
complete -c xmllint -l schema -d 'Use a W3C XML Schema file named SCHEMA for validation'
complete -c xmllint -l shell -d 'Run a navigating shell'
complete -c xmllint -l xpath -d 'Run an XPath expression given as argument and print the result'
complete -c xmllint -l stream -d 'Use streaming API - useful when used in combination with --relaxng or --valid…'
complete -c xmllint -l testIO -d 'Test user input/output support'
complete -c xmllint -l timing -d 'Output information about the time it takes xmllint to perform the various ste…'
complete -c xmllint -l valid -d 'Determine if the document is a valid instance of the included Document Type D…'
complete -c xmllint -l version -d 'Display the version of libxml(3) used'
complete -c xmllint -l walker -d 'Test the walker module, which is a reader interface but for a document tree, …'
complete -c xmllint -l xinclude -d 'Do XInclude processing'
complete -c xmllint -l xmlout -d 'Used in conjunction with --html'

