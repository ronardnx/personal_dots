# as
# Autogenerated from man page /usr/share/man/man1/as.1.gz
complete -c as -s a -d 'X Item "-a[cdghlmns]" Turn on listings, in any of a variety of ways: . RS 4'
complete -c as -o ac -d 'X Item "-ac" omit false conditionals'
complete -c as -o ad -d 'X Item "-ad" omit debugging directives'
complete -c as -o ag -d 'X Item "-ag" include general information, like as version and options passed'
complete -c as -o ah -d 'X Item "-ah" include high-level source'
complete -c as -o al -d 'X Item "-al" include assembly'
complete -c as -o am -d 'X Item "-am" include macro expansions'
complete -c as -o an -d 'X Item "-an" omit forms processing'
complete -c as -o as -d 'X Item "-as" include symbols'
complete -c as -l alternate -d 'X Item "--alternate" Begin in alternate macro mode'
complete -c as -l compress-debug-sections -d 'X Item "--compress-debug-sections" Compress DWARF debug sections using zlib w…'
complete -c as -l nocompress-debug-sections -d 'X Item "--nocompress-debug-sections" Do not compress DWARF debug sections'
complete -c as -s D -d 'X Item "-D" Enable denugging in target specific backends, if supported'
complete -c as -l debug-prefix-map -d 'X Item "--debug-prefix-map old=new" When assembling files in directory old, r…'
complete -c as -l defsym -d 'X Item "--defsym sym=value" Define the symbol sym to be value before assembli…'
complete -c as -l dump-config -d 'X Item "--dump-config" Displays how the assembler is configured and then exits'
complete -c as -l elf-stt-common -d 'X Item "--elf-stt-common=no"'
complete -c as -l emulation -d 'X Item "--emulation=name" If the assembler is configured to support multiple …'
complete -c as -s f -d 'X Item "-f" "fast"---skip whitespace and comment preprocessing (assume source…'
complete -c as -s g -d 'X Item "-g"'
complete -c as -l gen-debug -d 'X Item "--gen-debug" '
complete -c as -l gstabs -d 'X Item "--gstabs" Generate stabs debugging information for each assembler line'
complete -c as -l gstabs+ -d 'X Item "--gstabs+" Generate stabs debugging information for each assembler li…'
complete -c as -l gdwarf-2 -d 'X Item "--gdwarf-2" Generate DWARF2 debugging information for each assembler …'
complete -c as -l gdwarf-3 -d 'X Item "--gdwarf-3" This option is the same as the --gdwarf-2 option, except …'
complete -c as -l gdwarf-4 -d 'X Item "--gdwarf-4" This option is the same as the --gdwarf-2 option, except …'
complete -c as -l gdwarf-5 -d 'X Item "--gdwarf-5" This option is the same as the --gdwarf-2 option, except …'
complete -c as -l gdwarf-sections -d 'X Item "--gdwarf-sections" Instead of creating a '
complete -c as -l gdwarf-cie-version -d 'X Item "--gdwarf-cie-version=version" Control which version of DWARF Common I…'
complete -c as -l generate-missing-build-notes -d 'X Item "--generate-missing-build-notes=yes"'
complete -c as -l gsframe -d 'X Item "--gsframe"'
complete -c as -l hash-size -d 'X Item "--hash-size N" Ignored'
complete -c as -l help -d 'X Item "--help" Print a summary of the command-line options and exit'
complete -c as -l target-help -d 'X Item "--target-help" Print a summary of all target specific options and exit'
complete -c as -s I -d 'X Item "-I dir" Add directory dir to the search list for \\f(CW\\*(C`'
complete -c as -s J -d 'X Item "-J" Don\'t warn about signed overflow'
complete -c as -s K -d 'X Item "-K" Issue warnings when difference tables altered for long displaceme…'
complete -c as -s L -d 'X Item "-L"'
complete -c as -l keep-locals -d 'X Item "--keep-locals" . PD Keep (in the symbol table) local symbols'
complete -c as -l listing-lhs-width -d 'X Item "--listing-lhs-width=number" Set the maximum width, in words, of the o…'
complete -c as -l listing-lhs-width2 -d 'X Item "--listing-lhs-width2=number" Set the maximum width, in words, of the …'
complete -c as -l listing-rhs-width -d 'X Item "--listing-rhs-width=number" Set the maximum width of an input source …'
complete -c as -l listing-cont-lines -d 'X Item "--listing-cont-lines=number" Set the maximum number of lines printed …'
complete -c as -l multibyte-handling -d 'X Item "--multibyte-handling=allow"'
complete -c as -l no-pad-sections -d 'X Item "--no-pad-sections" Stop the assembler for padding the ends of output …'
complete -c as -s o -d 'X Item "-o objfile" Name the object-file output from as objfile'
complete -c as -s R -d 'X Item "-R" Fold the data section into the text section'
complete -c as -l reduce-memory-overheads -d 'X Item "--reduce-memory-overheads" Ignored'
complete -c as -l sectname-subst -d 'X Item "--sectname-subst" Honor substitution sequences in section names'
complete -c as -l size-check -d 'X Item "--size-check=error"'
complete -c as -l statistics -d 'X Item "--statistics" Print the maximum space (in bytes) and total time (in s…'
complete -c as -l strip-local-absolute -d 'X Item "--strip-local-absolute" Remove local absolute symbols from the outgoi…'
complete -c as -s v -d 'X Item "-v"'
complete -c as -o version -d 'X Item "-version" . PD Print the as version'
complete -c as -l version -d 'X Item "--version" Print the as version and exit'
complete -c as -s W -d 'X Item "-W"'
complete -c as -l no-warn -d 'X Item "--no-warn" . PD Suppress warning messages'
complete -c as -l fatal-warnings -d 'X Item "--fatal-warnings" Treat warnings as errors'
complete -c as -l warn -d 'X Item "--warn" Don\'t suppress warning messages or treat them as errors'
complete -c as -s w -d 'X Item "-w" Ignored'
complete -c as -s x -d 'X Item "-x" Ignored'
complete -c as -s Z -d 'X Item "-Z" Generate an object file even after errors'
complete -c as -o EB -d 'X Item "-EB" This option specifies that the output generated by the assembler…'
complete -c as -o EL -d 'X Item "-EL" This option specifies that the output generated by the assembler…'
complete -c as -o mabi -d 'X Item "-mabi=abi" Specify which ABI the source code uses'
complete -c as -o mcpu -d 'X Item "-mcpu=processor[+extension'
complete -c as -o march -d 'X Item "-march=architecture[+extension'
complete -c as -o mverbose-error -d 'X Item "-mverbose-error" This option enables verbose error messages for AArch…'
complete -c as -o mno-verbose-error -d 'X Item "-mno-verbose-error" This option disables verbose error messages in AA…'
complete -c as -o mdebug -d 'X Item "-mdebug"'
complete -c as -o no-mdebug -d 'X Item "-no-mdebug" . PD Enables or disables the generation of \\f(CW\\*(C`'
complete -c as -o relax -d 'X Item "-relax" This option forces all relocations to be put into the object …'
complete -c as -o replace -d 'X Item "-replace"'
complete -c as -o noreplace -d 'X Item "-noreplace" '
complete -c as -o Gsize -d 'X Item "-Gsize" A local common symbol larger than size is placed in \\f(CW\\*(C`'
complete -c as -s F -d 'X Item "-F"'
complete -c as -o 32addr -d 'X Item "-32addr" . PD These options are ignored for backward compatibility'
complete -c as -o mcode-density -d 'X Item "-mcode-density" Enable Code Density extension instructions'
complete -c as -o mfpu -d 'X Item "-mfpu=floating-point-format" Select which Floating Point architecture…'
complete -c as -o mfloat-abi -d 'X Item "-mfloat-abi=abi" Select which floating point ABI is in use'
complete -c as -o mthumb -d 'X Item "-mthumb" Enable Thumb only instruction decoding'
complete -c as -o mapcs-32 -o mapcs-26 -o mapcs-float -o mapcs-reentrant -d 'X Item "-mapcs-32 | -mapcs-26 | -mapcs-float | -mapcs-reentrant" Select which…'
complete -c as -o mthumb-interwork -d 'X Item "-mthumb-interwork" Specify that the code has been generated with inte…'
complete -c as -o mccs -d 'X Item "-mccs" Turns on CodeComposer Studio assembly syntax compatibility mode'
complete -c as -s k -d 'X Item "-k" Specify that PIC code has been generated'
complete -c as -o mfdpic -d 'X Item "-mfdpic" Assemble for the FDPIC ABI'
complete -c as -o mno-fdpic -d 'X Item "-mno-fdpic"'
complete -c as -o mnopic -d 'X Item "-mnopic" . PD Disable -mfdpic'
complete -c as -o mlittle-endian -d 'X Item "-mlittle-endian" . PD Generate little-endian output'
complete -c as -o mbig-endian -d 'X Item "-mbig-endian" . PD Generate big-endian output'
complete -c as -o fpic -d 'X Item "-fpic"'
complete -c as -o pic -d 'X Item "-pic" . PD Generate position-independent code'
complete -c as -o mljump -d 'X Item "-mljump"'
complete -c as -o mno-ljump -d 'X Item "-mno-ljump" '
complete -c as -o mbranch-stub -d 'X Item "-mbranch-stub"'
complete -c as -o mno-branch-stub -d 'X Item "-mno-branch-stub" '
complete -c as -o force2bsr -d 'X Item "-force2bsr"'
complete -c as -o mforce2bsr -d 'X Item "-mforce2bsr"'
complete -c as -o no-force2bsr -d 'X Item "-no-force2bsr"'
complete -c as -o mno-force2bsr -d 'X Item "-mno-force2bsr" '
complete -c as -o jsri2bsr -d 'X Item "-jsri2bsr"'
complete -c as -o mjsri2bsr -d 'X Item "-mjsri2bsr"'
complete -c as -o no-jsri2bsr -d 'X Item "-no-jsri2bsr"'
complete -c as -o mno-jsri2bsr -d 'X Item "-mno-jsri2bsr" '
complete -c as -o mnolrw -d 'X Item "-mnolrw"'
complete -c as -o mno-lrw -d 'X Item "-mno-lrw" '
complete -c as -o melrw -d 'X Item "-melrw"'
complete -c as -o mno-elrw -d 'X Item "-mno-elrw" '
complete -c as -o mlaf -d 'X Item "-mlaf"'
complete -c as -o mliterals-after-func -d 'X Item "-mliterals-after-func"'
complete -c as -o mno-laf -d 'X Item "-mno-laf"'
complete -c as -o mno-literals-after-func -d 'X Item "-mno-literals-after-func" '
complete -c as -o mlabr -d 'X Item "-mlabr"'
complete -c as -o mliterals-after-br -d 'X Item "-mliterals-after-br"'
complete -c as -o mno-labr -d 'X Item "-mno-labr"'
complete -c as -o mnoliterals-after-br -d 'X Item "-mnoliterals-after-br" '
complete -c as -o mistack -d 'X Item "-mistack"'
complete -c as -o mno-istack -d 'X Item "-mno-istack" . PD Enable/disable interrupt stack instructions'
complete -c as -o mhard-float -d 'X Item "-mhard-float" Enable hard float instructions'
complete -c as -o mmp -d 'X Item "-mmp" Enable multiprocessor instructions'
complete -c as -o mcp -d 'X Item "-mcp" Enable coprocessor instructions'
complete -c as -o mcache -d 'X Item "-mcache" Enable cache prefetch instruction'
complete -c as -o msecurity -d 'X Item "-msecurity" Enable C-SKY security instructions'
complete -c as -o mtrust -d 'X Item "-mtrust" Enable C-SKY trust instructions'
complete -c as -o mdsp -d 'X Item "-mdsp" Enable DSP instructions'
complete -c as -o medsp -d 'X Item "-medsp" Enable enhanced DSP instructions'
complete -c as -o mvdsp -d 'X Item "-mvdsp" Enable vector DSP instructions'
complete -c as -o mepiphany -d 'X Item "-mepiphany" Specifies that the both 32 and 16 bit instructions are al…'
complete -c as -o mepiphany16 -d 'X Item "-mepiphany16" Restricts the permitted instructions to just the 16 bit…'
complete -c as -o h-tick-hex -d 'X Item "-h-tick-hex" Support H\'00 style hex constants in addition to 0x00 sty…'
complete -c as -o mach -d 'X Item "-mach=name" Sets the H8300 machine variant'
complete -c as -l 32 -l x32 -l 64 -d 'X Item "--32 | --x32 | --64" Select the word size, either 32 bits or 64 bits'
complete -c as -s n -d 'X Item "-n" By default, x86 GAS replaces multiple nop instructions used for a…'
complete -c as -l divide -d 'X Item "--divide" On SVR4-derived platforms, the character / is treated as a …'
complete -c as -o mtune -d 'X Item "-mtune=CPU" This option specifies a processor to optimize for'
complete -c as -o msse2avx -d 'X Item "-msse2avx" This option specifies that the assembler should encode SSE…'
complete -c as -o muse-unaligned-vector-move -d 'X Item "-muse-unaligned-vector-move" This option specifies that the assembler…'
complete -c as -o msse-check -d 'X Item "-msse-check=none"'
complete -c as -o mavxscalar -d 'X Item "-mavxscalar=128"'
complete -c as -o mvexwig -d 'X Item "-mvexwig=0"'
complete -c as -o mevexlig -d 'X Item "-mevexlig=128"'
complete -c as -o mevexwig -d 'X Item "-mevexwig=0"'
complete -c as -o mmnemonic -d 'X Item "-mmnemonic=att"'
complete -c as -o msyntax -d 'X Item "-msyntax=att"'
complete -c as -o mnaked-reg -d 'X Item "-mnaked-reg" This option specifies that registers don\'t require a % p…'
complete -c as -o madd-bnd-prefix -d 'X Item "-madd-bnd-prefix" This option forces the assembler to add BND prefix …'
complete -c as -o mno-shared -d 'X Item "-mno-shared" On ELF target, the assembler normally optimizes out non-…'
complete -c as -o mbig-obj -d 'X Item "-mbig-obj" On PE/COFF target this option forces the use of big object…'
complete -c as -o momit-lock-prefix -d 'X Item "-momit-lock-prefix=no"'
complete -c as -o mfence-as-lock-add -d 'X Item "-mfence-as-lock-add=no"'
complete -c as -o mrelax-relocations -d 'X Item "-mrelax-relocations=no"'
complete -c as -o malign-branch-boundary -d 'X Item "-malign-branch-boundary=NUM" This option controls how the assembler s…'
complete -c as -o malign-branch -d 'X Item "-malign-branch=TYPE[+TYPE'
complete -c as -o malign-branch-prefix-size -d 'X Item "-malign-branch-prefix-size=NUM" This option specifies the maximum num…'
complete -c as -o mbranches-within-32B-boundaries -d 'X Item "-mbranches-within-32B-boundaries" This option aligns conditional jump…'
complete -c as -o mlfence-after-load -d 'X Item "-mlfence-after-load=no"'
complete -c as -o mlfence-before-indirect-branch -d 'X Item "-mlfence-before-indirect-branch=none"'
complete -c as -o mlfence-before-ret -d 'X Item "-mlfence-before-ret=none"'
complete -c as -o mx86-used-note -d 'X Item "-mx86-used-note=no"'
complete -c as -o mevexrcig -d 'X Item "-mevexrcig=rne"'
complete -c as -o mamd64 -d 'X Item "-mamd64"'
complete -c as -o mintel64 -d 'X Item "-mintel64" '
complete -c as -o O0 -s O -o O1 -o O2 -o Os -d 'X Item "-O0 | -O | -O1 | -O2 | -Os" Optimize instruction encoding with smalle…'
complete -c as -o mip2022ext -d 'X Item "-mip2022ext" Specifies that the extended IP2022 instructions are allo…'
complete -c as -o mip2022 -d 'X Item "-mip2022" Restores the default behaviour, which restricts the permitt…'
complete -c as -o m32c -d 'X Item "-m32c" Assemble M32C instructions'
complete -c as -o m16c -d 'X Item "-m16c" Assemble M16C instructions (the default)'
complete -c as -l m32rx -d 'X Item "--m32rx" Specify which processor in the M32R family is the target'
complete -c as -l warn-explicit-parallel-conflicts -l Wp -d 'X Item "--warn-explicit-parallel-conflicts or --Wp" Produce warning messages …'
complete -c as -l no-warn-explicit-parallel-conflicts -l Wnp -d 'X Item "--no-warn-explicit-parallel-conflicts or --Wnp" Do not produce warnin…'
complete -c as -s l -d 'X Item "-l" Shorten references to undefined symbols, to one word instead of t…'
complete -c as -o m68000 -o m68008 -o m68010 -o m68020 -o m68030 -d 'X Item "-m68000 | -m68008 | -m68010 | -m68020 | -m68030"'
complete -c as -o m68040 -o m68060 -o m68302 -o m68331 -o m68332 -d 'X Item "| -m68040 | -m68060 | -m68302 | -m68331 | -m68332"'
complete -c as -o m68333 -o m68340 -o mcpu32 -o m5200 -d 'X Item "| -m68333 | -m68340 | -mcpu32 | -m5200" '
complete -c as -o m68881 -o m68882 -o mno-68881 -o mno-68882 -d 'X Item "-m68881 | -m68882 | -mno-68881 | -mno-68882" The target machine does …'
complete -c as -o m68851 -o mno-68851 -d 'X Item "-m68851 | -mno-68851" The target machine does (or does not) have a me…'
complete -c as -o relax-section -d 'X Item "-relax-section" Replace identified out-of-range branches with PC-rela…'
complete -c as -o relax-all -d 'X Item "-relax-all" Replace branch instructions not determinable to be in ran…'
complete -c as -o no-relax -d 'X Item "-no-relax" Do not replace any branches or calls'
complete -c as -o mlink-relax -d 'X Item "-mlink-relax" Assume that LD would optimize LDI32 instructions by che…'
complete -c as -o mno-link-relax -d 'X Item "-mno-link-relax" Assume that LD would not optimize LDI32 instructions'
complete -c as -o mno-warn-regname-label -d 'X Item "-mno-warn-regname-label" Do not warn if a label name matches a regist…'
complete -c as -s G -d 'X Item "-G num" This option sets the largest size of an object that can be re…'
complete -c as -o mips1 -d 'X Item "-mips1"'
complete -c as -o mips2 -d 'X Item "-mips2"'
complete -c as -o mips3 -d 'X Item "-mips3"'
complete -c as -o mips4 -d 'X Item "-mips4"'
complete -c as -o mips5 -d 'X Item "-mips5"'
complete -c as -o mips32 -d 'X Item "-mips32"'
complete -c as -o mips32r2 -d 'X Item "-mips32r2"'
complete -c as -o mips32r3 -d 'X Item "-mips32r3"'
complete -c as -o mips32r5 -d 'X Item "-mips32r5"'
complete -c as -o mips32r6 -d 'X Item "-mips32r6"'
complete -c as -o mips64 -d 'X Item "-mips64"'
complete -c as -o mips64r2 -d 'X Item "-mips64r2"'
complete -c as -o mips64r3 -d 'X Item "-mips64r3"'
complete -c as -o mips64r5 -d 'X Item "-mips64r5"'
complete -c as -o mips64r6 -d 'X Item "-mips64r6" '
complete -c as -o mfix7000 -d 'X Item "-mfix7000"'
complete -c as -o mno-fix7000 -d 'X Item "-mno-fix7000" '
complete -c as -o mfix-rm7000 -d 'X Item "-mfix-rm7000"'
complete -c as -o mno-fix-rm7000 -d 'X Item "-mno-fix-rm7000" '
complete -c as -o mfix-r5900 -d 'X Item "-mfix-r5900"'
complete -c as -o mno-fix-r5900 -d 'X Item "-mno-fix-r5900" '
complete -c as -o mpdr -d 'X Item "-mpdr"'
complete -c as -o mno-pdr -d 'X Item "-mno-pdr" . PD Control generation of \\f(CW\\*(C`. pdr\\*(C\' sections'
complete -c as -o mgp32 -d 'X Item "-mgp32"'
complete -c as -o mfp32 -d 'X Item "-mfp32" '
complete -c as -o mgp64 -d 'X Item "-mgp64"'
complete -c as -o mfp64 -d 'X Item "-mfp64" '
complete -c as -o mfpxx -d 'X Item "-mfpxx" The register sizes are normally inferred from the ISA and ABI…'
complete -c as -o modd-spreg -d 'X Item "-modd-spreg"'
complete -c as -o mno-odd-spreg -d 'X Item "-mno-odd-spreg" '
complete -c as -o mips16 -d 'X Item "-mips16"'
complete -c as -o no-mips16 -d 'X Item "-no-mips16" . PD Generate code for the MIPS 16 processor'
complete -c as -o mmips16e2 -d 'X Item "-mmips16e2"'
complete -c as -o mno-mips16e2 -d 'X Item "-mno-mips16e2" '
complete -c as -o mmicromips -d 'X Item "-mmicromips"'
complete -c as -o mno-micromips -d 'X Item "-mno-micromips" . PD Generate code for the microMIPS processor'
complete -c as -o msmartmips -d 'X Item "-msmartmips"'
complete -c as -o mno-smartmips -d 'X Item "-mno-smartmips" '
complete -c as -o mips3d -d 'X Item "-mips3d"'
complete -c as -o no-mips3d -d 'X Item "-no-mips3d" '
complete -c as -o mdmx -d 'X Item "-mdmx"'
complete -c as -o no-mdmx -d 'X Item "-no-mdmx" '
complete -c as -o mno-dsp -d 'X Item "-mno-dsp" '
complete -c as -o mdspr2 -d 'X Item "-mdspr2"'
complete -c as -o mno-dspr2 -d 'X Item "-mno-dspr2" '
complete -c as -o mdspr3 -d 'X Item "-mdspr3"'
complete -c as -o mno-dspr3 -d 'X Item "-mno-dspr3" '
complete -c as -o mmsa -d 'X Item "-mmsa"'
complete -c as -o mno-msa -d 'X Item "-mno-msa" . PD Generate code for the MIPS SIMD Architecture Extension'
complete -c as -o mxpa -d 'X Item "-mxpa"'
complete -c as -o mno-xpa -d 'X Item "-mno-xpa" '
complete -c as -o mmt -d 'X Item "-mmt"'
complete -c as -o mno-mt -d 'X Item "-mno-mt" . PD Generate code for the MT Application Specific Extension'
complete -c as -o mmcu -d 'X Item "-mmcu"'
complete -c as -o mno-mcu -d 'X Item "-mno-mcu" '
complete -c as -o mcrc -d 'X Item "-mcrc"'
complete -c as -o mno-crc -d 'X Item "-mno-crc" '
complete -c as -o mginv -d 'X Item "-mginv"'
complete -c as -o mno-ginv -d 'X Item "-mno-ginv" '
complete -c as -o mloongson-mmi -d 'X Item "-mloongson-mmi"'
complete -c as -o mno-loongson-mmi -d 'X Item "-mno-loongson-mmi" '
complete -c as -o mloongson-cam -d 'X Item "-mloongson-cam"'
complete -c as -o mno-loongson-cam -d 'X Item "-mno-loongson-cam" '
complete -c as -o mloongson-ext -d 'X Item "-mloongson-ext"'
complete -c as -o mno-loongson-ext -d 'X Item "-mno-loongson-ext" '
complete -c as -o mloongson-ext2 -d 'X Item "-mloongson-ext2"'
complete -c as -o mno-loongson-ext2 -d 'X Item "-mno-loongson-ext2" '
complete -c as -o minsn32 -d 'X Item "-minsn32"'
complete -c as -o mno-insn32 -d 'X Item "-mno-insn32" '
complete -c as -l construct-floats -d 'X Item "--construct-floats"'
complete -c as -l no-construct-floats -d 'X Item "--no-construct-floats" '
complete -c as -l relax-branch -d 'X Item "--relax-branch"'
complete -c as -l no-relax-branch -d 'X Item "--no-relax-branch" '
complete -c as -o mignore-branch-isa -d 'X Item "-mignore-branch-isa"'
complete -c as -o mno-ignore-branch-isa -d 'X Item "-mno-ignore-branch-isa" '
complete -c as -o mnan -d 'X Item "-mnan=encoding" Select between the IEEE 754-2008 (-mnan=2008) or the …'
complete -c as -o nocpp -d 'X Item "-nocpp" as ignores this option'
complete -c as -l trap -d 'X Item "--trap"'
complete -c as -l no-trap -d 'X Item "--no-trap"'
complete -c as -l break -d 'X Item "--break"'
complete -c as -l no-break -d 'X Item "--no-break" '
complete -c as -o fPIC -d 'X Item "-fPIC" . PD Generate position-independent code'
complete -c as -o fno-pic -d 'X Item "-fno-pic" Don\'t generate position-independent code (default) '
complete -c as -o mpic -d el
complete -c as -o mno-fp-as-gp-relax -d el
complete -c as -o mb2bb-relax -d el
complete -c as -o mno-all-relax -d el
complete -c as -o mbaseline -d el
complete -c as -o mfpu-freg -d el
complete -c as -o mmac -d el
complete -c as -o mdiv -d el
complete -c as -o m16bit-ext -d el
complete -c as -o mdx-regs -d el
complete -c as -o mperf-ext -d el
complete -c as -o mperf2-ext -d el
complete -c as -o mstring-ext -d el
complete -c as -o mreduced-regs -d el
complete -c as -o maudio-isa-ext -d el
complete -c as -o mfpu-sp-ext -d el
complete -c as -o mfpu-dp-ext -d el
complete -c as -o mfpu-fma -d el
complete -c as -o mall-ext -d el
complete -c as -o a32 -d 'X Item "-a32" Generate ELF32 or XCOFF32'
complete -c as -o a64 -d 'X Item "-a64" Generate ELF64 or XCOFF64'
complete -c as -o mpwrx -o mpwr2 -d 'X Item "-mpwrx | -mpwr2" Generate code for POWER/2 (RIOS2)'
complete -c as -o mpwr -d 'X Item "-mpwr" Generate code for POWER (RIOS1)'
complete -c as -o m601 -d 'X Item "-m601" Generate code for PowerPC 601'
complete -c as -o mppc -o mppc32 -o m603 -o m604 -d 'X Item "-mppc, -mppc32, -m603, -m604" Generate code for PowerPC 603/604'
complete -c as -o m403 -o m405 -d 'X Item "-m403, -m405" Generate code for PowerPC 403/405'
complete -c as -o m440 -d 'X Item "-m440" Generate code for PowerPC 440'
complete -c as -o m464 -d 'X Item "-m464" Generate code for PowerPC 464'
complete -c as -o m476 -d 'X Item "-m476" Generate code for PowerPC 476'
complete -c as -o m7400 -o m7410 -o m7450 -o m7455 -d 'X Item "-m7400, -m7410, -m7450, -m7455" Generate code for PowerPC 7400/7410/7…'
complete -c as -o m750cl -o mgekko -o mbroadway -d 'X Item "-m750cl, -mgekko, -mbroadway" Generate code for PowerPC 750CL/Gekko/B…'
complete -c as -o m821 -o m850 -o m860 -d 'X Item "-m821, -m850, -m860" Generate code for PowerPC 821/850/860'
complete -c as -o mppc64 -o m620 -d 'X Item "-mppc64, -m620" Generate code for PowerPC 620/625/630'
complete -c as -o me200z2 -o me200z4 -d 'X Item "-me200z2, -me200z4" Generate code for e200 variants, e200z2 with LSP,…'
complete -c as -o me300 -d 'X Item "-me300" Generate code for PowerPC e300 family'
complete -c as -o me500 -o me500x2 -d 'X Item "-me500, -me500x2" Generate code for Motorola e500 core complex'
complete -c as -o me500mc -d 'X Item "-me500mc" Generate code for Freescale e500mc core complex'
complete -c as -o me500mc64 -d 'X Item "-me500mc64" Generate code for Freescale e500mc64 core complex'
complete -c as -o me5500 -d 'X Item "-me5500" Generate code for Freescale e5500 core complex'
complete -c as -o me6500 -d 'X Item "-me6500" Generate code for Freescale e6500 core complex'
complete -c as -o mlsp -d 'X Item "-mlsp" Enable LSP instructions.   (Disables SPE and SPE2. )'
complete -c as -o mspe -d 'X Item "-mspe" Generate code for Motorola SPE instructions.   (Disables LSP'
complete -c as -o mspe2 -d 'X Item "-mspe2" Generate code for Freescale SPE2 instructions'
complete -c as -o mtitan -d 'X Item "-mtitan" Generate code for AppliedMicro Titan core complex'
complete -c as -o mppc64bridge -d 'X Item "-mppc64bridge" Generate code for PowerPC 64, including bridge insns'
complete -c as -o mbooke -d 'X Item "-mbooke" Generate code for 32-bit BookE'
complete -c as -o ma2 -d 'X Item "-ma2" Generate code for A2 architecture'
complete -c as -o maltivec -d 'X Item "-maltivec" Generate code for processors with AltiVec instructions'
complete -c as -o mvle -d 'X Item "-mvle" Generate code for Freescale PowerPC VLE instructions'
complete -c as -o mvsx -d 'X Item "-mvsx" Generate code for processors with Vector-Scalar (VSX) instruct…'
complete -c as -o mhtm -d 'X Item "-mhtm" Generate code for processors with Hardware Transactional Memor…'
complete -c as -o mpower4 -o mpwr4 -d 'X Item "-mpower4, -mpwr4" Generate code for Power4 architecture'
complete -c as -o mpower5 -o mpwr5 -o mpwr5x -d 'X Item "-mpower5, -mpwr5, -mpwr5x" Generate code for Power5 architecture'
complete -c as -o mpower6 -o mpwr6 -d 'X Item "-mpower6, -mpwr6" Generate code for Power6 architecture'
complete -c as -o mpower7 -o mpwr7 -d 'X Item "-mpower7, -mpwr7" Generate code for Power7 architecture'
complete -c as -o mpower8 -o mpwr8 -d 'X Item "-mpower8, -mpwr8" Generate code for Power8 architecture'
complete -c as -o mpower9 -o mpwr9 -d 'X Item "-mpower9, -mpwr9" Generate code for Power9 architecture'
complete -c as -o mpower10 -o mpwr10 -d 'X Item "-mpower10, -mpwr10" Generate code for Power10 architecture'
complete -c as -o mfuture -d 'X Item "-mfuture" Generate code for \'future\' architecture'
complete -c as -o mcell -d 'X Item "-mcell"'
complete -c as -o mcom -d 'X Item "-mcom" Generate code Power/PowerPC common instructions'
complete -c as -o many -d 'X Item "-many" Generate code for any architecture (PWR/PWRX/PPC)'
complete -c as -o mregnames -d 'X Item "-mregnames" Allow symbolic names for registers'
complete -c as -o mno-regnames -d 'X Item "-mno-regnames" Do not allow symbolic names for registers'
complete -c as -o mrelocatable -d 'X Item "-mrelocatable" Support for GCC\'s -mrelocatable option'
complete -c as -o mrelocatable-lib -d 'X Item "-mrelocatable-lib" Support for GCC\'s -mrelocatable-lib option'
complete -c as -o memb -d 'X Item "-memb" Set PPC_EMB bit in ELF flags'
complete -c as -o mlittle -o le -d 'X Item "-mlittle, -mlittle-endian, -le" Generate code for a little endian mac…'
complete -c as -o mbig -o be -d 'X Item "-mbig, -mbig-endian, -be" Generate code for a big endian machine'
complete -c as -o msolaris -d 'X Item "-msolaris" Generate code for Solaris'
complete -c as -o mno-solaris -d 'X Item "-mno-solaris" Do not generate code for Solaris'
complete -c as -o nops -d 'X Item "-nops=count" If an alignment directive inserts more than count nops, …'
complete -c as -o misa-spec -d 'X Item "-misa-spec=ISAspec" Select the default isa spec version'
complete -c as -o mpriv-spec -d 'X Item "-mpriv-spec=PRIVspec" Select the privileged spec version'
complete -c as -o mrelax -d 'X Item "-mrelax" Take advantage of linker relaxations to reduce the number of…'
complete -c as -o mno-relax -d 'X Item "-mno-relax" Don\'t do linker relaxations'
complete -c as -o march-attr -d 'X Item "-march-attr" Generate the default contents for the riscv elf attribut…'
complete -c as -o mno-arch-attr -d 'X Item "-mno-arch-attr" Don\'t generate the default riscv elf attribute sectio…'
complete -c as -o mcsr-check -d 'X Item "-mcsr-check" Enable the CSR checking for the ISA-dependent CRS and th…'
complete -c as -o mno-csr-check -d 'X Item "-mno-csr-check" Don\'t do CSR checking'
complete -c as -o m31 -d 'X Item "-m31"'
complete -c as -o m64 -d 'X Item "-m64" . PD Select the word size, either 31/32 bits or 64 bits'
complete -c as -o mesa -d 'X Item "-mesa"'
complete -c as -o mzarch -d 'X Item "-mzarch" '
complete -c as -o mwarn-areg-zero -d 'X Item "-mwarn-areg-zero" Warn whenever the operand for a base or index regis…'
complete -c as -o mdsbt -d 'X Item "-mdsbt"'
complete -c as -o mno-dsbt -d 'X Item "-mno-dsbt" '
complete -c as -o mpid -d 'X Item "-mpid=no"'
complete -c as -o mno-pic -d 'X Item "-mno-pic" '
complete -c as -o m32 -d 'X Item "-m32 | -m64" Select the word size, either 32 bits or 64 bits'
complete -c as -l text-section-literals -l no-text-section-literals -d 'X Item "--text-section-literals | --no-text-section-literals" Control the tre…'
complete -c as -l auto-litpools -l no-auto-litpools -d 'X Item "--auto-litpools | --no-auto-litpools" Control the treatment of litera…'
complete -c as -l absolute-literals -l no-absolute-literals -d 'X Item "--absolute-literals | --no-absolute-literals" Indicate to the assembl…'
complete -c as -l target-align -l no-target-align -d 'X Item "--target-align | --no-target-align" Enable or disable automatic align…'
complete -c as -l longcalls -l no-longcalls -d 'X Item "--longcalls | --no-longcalls" Enable or disable transformation of cal…'
complete -c as -l transform -l no-transform -d 'X Item "--transform | --no-transform" Enable or disable all assembler transfo…'
complete -c as -l rename-section -d 'X Item "--rename-section oldname=newname" Rename the oldname section to newna…'
complete -c as -l trampolines -l no-trampolines -d 'X Item "--trampolines | --no-trampolines" Enable or disable transformation of…'
complete -c as -l abi-windowed -l abi-call0 -d 'X Item "--abi-windowed | --abi-call0" Choose ABI tag written to the \\f(CW\\*(C`'
complete -c as -o local-prefix -d 'X Item "-local-prefix=prefix" Mark all labels with specified prefix as local'
complete -c as -o colonless -d 'X Item "-colonless" Accept colonless labels'
complete -c as -o sdcc -d 'X Item "-sdcc" Accept assembler code produced by SDCC'
complete -c as -o fp-s -d 'X Item "-fp-s=FORMAT" Single precision floating point numbers format'
complete -c as -l enable-x86-relax-relocations
complete -c as -l enable-x86-used-note
complete -c as -l with-priv-spec
complete -c as -l 'transform;' -d 'rare cases when the instructions must be exactly as specified in the assembly…'
complete -c as -o fp-d

