# glib-compile-resources
# Autogenerated from man page /usr/share/man/man1/glib-compile-resources.1.gz
complete -c glib-compile-resources -s h -l help -d 'Print help and exit'
complete -c glib-compile-resources -l version -d 'Print program version and exit'
complete -c glib-compile-resources -l target -d 'Store the compiled resources in the file TARGET'
complete -c glib-compile-resources -l sourcedir -d 'The files referenced in FILE are loaded from this directory'
complete -c glib-compile-resources -l generate-source -d 'Instead of a writing the resource bundle in binary form create a C source fil…'
complete -c glib-compile-resources -l generate-header -d 'Generate a header file for use with C code generated by --generate-source'
complete -c glib-compile-resources -l generate-dependencies -d 'Prints the list of files that the resource bundle references to standard outp…'
complete -c glib-compile-resources -l c-name -d 'Specify the prefix used for the C identifiers in the code generated by --gene…'
complete -c glib-compile-resources -l manual-register -d 'By default code generated by --generate-source uses automatic initialization …'
complete -c glib-compile-resources -l internal -d 'By default code generated by --generate-source declares all initialization fu…'
complete -c glib-compile-resources -l external-data -d 'By default code generated by --generate-source embeds the resource data as a …'
complete -c glib-compile-resources -l dependency-file -d 'Write dependencies in the same style as gcc -M -MF to the given file'
complete -c glib-compile-resources -l generate-phony-targets -d 'When creating a dependency file with --dependency-file include phony targets …'
complete -c glib-compile-resources -l compiler -d 'Generate code that is going to target the given compiler NAME'
complete -c glib-compile-resources -l generate

