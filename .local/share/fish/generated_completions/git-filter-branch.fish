# git-filter-branch
# Autogenerated from man page /usr/share/man/man1/git-filter-branch.1.gz
complete -c git-filter-branch -l setup -d 'This is not a real filter executed for each commit but a one time setup just …'
complete -c git-filter-branch -l subdirectory-filter -d 'Only look at the history which touches the given subdirectory'
complete -c git-filter-branch -l env-filter -d 'This filter may be used if you only need to modify the environment in which t…'
complete -c git-filter-branch -l tree-filter -d 'This is the filter for rewriting the tree and its contents'
complete -c git-filter-branch -l index-filter -d 'This is the filter for rewriting the index'
complete -c git-filter-branch -l parent-filter -d 'This is the filter for rewriting the commit\'s parent list'
complete -c git-filter-branch -l msg-filter -d 'This is the filter for rewriting the commit messages'
complete -c git-filter-branch -l commit-filter -d 'This is the filter for performing the commit'
complete -c git-filter-branch -l tag-name-filter -d 'This is the filter for rewriting tag names'
complete -c git-filter-branch -l prune-empty -d 'Some filters will generate empty commits that leave the tree untouched'
complete -c git-filter-branch -l original -d 'Use this option to set the namespace where the original commits will be stored'
complete -c git-filter-branch -s d -d 'Use this option to set the path to the temporary directory used for rewriting'
complete -c git-filter-branch -s f -l force -d 'git filter-branch refuses to start with an existing temporary directory or wh…'
complete -c git-filter-branch -l state-branch -d 'This option will cause the mapping from old to new objects to be loaded from …'
complete -c git-filter-branch -l all
complete -c git-filter-branch -l prune -d 'git repack -ad; git prune instead)'

