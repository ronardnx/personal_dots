# git-status
# Autogenerated from man page /usr/share/man/man1/git-status.1.gz
complete -c git-status -s s -l short -d 'Give the output in the short-format'
complete -c git-status -s b -l branch -d 'Show the branch and tracking info even in short-format'
complete -c git-status -l show-stash -d 'Show the number of entries currently stashed away'
complete -c git-status -l porcelain -d 'Give the output in an easy-to-parse format for scripts'
complete -c git-status -l long -d 'Give the output in the long-format.  This is the default'
complete -c git-status -s v -l verbose -d 'In addition to the names of files that have been changed, also show the textu…'
complete -c git-status -s u -l untracked-files -d 'Show untracked files'
complete -c git-status -l ignore-submodules -d 'Ignore changes to submodules when looking for changes'
complete -c git-status -l ignored -d 'Show ignored files as well'
complete -c git-status -s z -d 'Terminate entries with NUL, instead of LF'
complete -c git-status -l column -l no-column -d 'Display untracked files in columns.  See configuration variable column'
complete -c git-status -l ahead-behind -l no-ahead-behind -d 'Display or do not display detailed ahead/behind counts for the branch relativ…'
complete -c git-status -l renames -l no-renames -d 'Turn on/off rename detection regardless of user configuration'
complete -c git-status -l find-renames -d 'Turn on rename detection, optionally setting the similarity threshold'
complete -c git-status -o uno
complete -c git-status -l ----------------------------------------------- -d '         [AMD]   not updated M        [ MTD]  updated in index T        [ MTD…'
complete -c git-status -l ---------------------------------------------------------- -d '# branch. oid <commit> | (initial)        Current commit.  # branch'
complete -c git-status -l ------------------------------------------------------ -d '<XY>        A 2 character field containing the staged and             unstage…'

