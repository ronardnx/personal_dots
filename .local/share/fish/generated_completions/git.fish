# git
# Autogenerated from man page /usr/share/man/man1/git.1.gz
complete -c git -s v -l version -d 'Prints the Git suite version that the git program came from'
complete -c git -s h -l help -d 'Prints the synopsis and a list of the most commonly used commands'
complete -c git -s C -d 'Run as if git was started in <path> instead of the current working directory'
complete -c git -s c -d 'Pass a configuration parameter to the command'
complete -c git -l config-env -d 'Like -c <name>=<value>, give configuration variable <name> a value, where <en…'
complete -c git -l exec-path -d 'Path to wherever your core Git programs are installed'
complete -c git -l html-path -d 'Print the path, without trailing slash, where Git\'s HTML documentation is ins…'
complete -c git -l man-path -d 'Print the manpath (see man(1)) for the man pages for this version of Git and …'
complete -c git -l info-path -d 'Print the path where the Info files documenting this version of Git are insta…'
complete -c git -s p -l paginate -d 'Pipe all output into less (or if set, $PAGER) if standard output is a terminal'
complete -c git -s P -l no-pager -d 'Do not pipe Git output into a pager'
complete -c git -l git-dir -d 'Set the path to the repository (". git" directory)'
complete -c git -l work-tree -d 'Set the path to the working tree'
complete -c git -l namespace -d 'Set the Git namespace.  See gitnamespaces(7) for more details'
complete -c git -l bare -d 'Treat the repository as a bare repository'
complete -c git -l no-replace-objects -d 'Do not use replacement refs to replace Git objects'
complete -c git -l literal-pathspecs -d 'Treat pathspecs literally (i. e.  no globbing, no pathspec magic)'
complete -c git -l glob-pathspecs -d 'Add "glob" magic to all pathspec'
complete -c git -l noglob-pathspecs -d 'Add "literal" magic to all pathspec'
complete -c git -l icase-pathspecs -d 'Add "icase" magic to all pathspec'
complete -c git -l no-optional-locks -d 'Do not perform optional operations that require locks'
complete -c git -l list-cmds -d 'List commands by group'
complete -c git -l attr-source -d 'Read gitattributes from <tree-ish> instead of the worktree'
complete -c git -l all -d or
complete -c git -s a -d 'is given then all available commands are printed'
complete -c git -l object-format -d 'in git-init(1)'
complete -c git -l trace-ascii -d 'on the command line.  See GIT_TRACE for available trace output options'
complete -c git -l raw -d 'diff output, etc).  GIT_GLOB_PATHSPECS'

