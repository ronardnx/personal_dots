# yay
# Autogenerated from man page /usr/share/man/man8/yay.8.gz
complete -c yay -s Y -l yay -d 'Perform yay specific operations'
complete -c yay -s B -l build -d 'Build a PKGBUILD in a given directory'
complete -c yay -s P -l show -d 'Perform yay specific print operations'
complete -c yay -s G -l getpkgbuild -d 'Downloads PKGBUILD from ABS or AUR'
complete -c yay -s W -l web -d 'Web related operations such as voting for AUR packages'
complete -c yay -s S -o Si -o Sl -o Ss -o Su -o Sc -o Qu -d 'These operations are extended to support both AUR and repo packages'
complete -c yay -s R -d 'Yay will also remove cached data about devel packages'
complete -c yay -l repo -d 'Assume all targets are from the repositories'
complete -c yay -s a -l aur -d 'Assume all targets are from the AUR'
complete -c yay -l gendb -d 'Generate development package database'
complete -c yay -s c -l clean -d 'Remove unneeded dependencies'
complete -c yay -l complete -d 'Print a list of all AUR and repo packages'
complete -c yay -s d -l defaultconfig -d 'Print default yay configuration'
complete -c yay -s g -l currentconfig -d 'Print current yay configuration'
complete -c yay -s s -l stats -d 'Displays information about installed packages and system health'
complete -c yay -s w -l news -d 'Print new news from the Archlinux homepage'
complete -c yay -s q -l quiet -d 'Only show titles when printing news'
complete -c yay -s i -l install -d 'Build and install a PKGBUILD in a given directory'
complete -c yay -s f -l force -d 'Force download for ABS packages that already exist in the current directory'
complete -c yay -s p -l print -d 'Prints the PKGBUILD of the given packages to stdout'
complete -c yay -s u -l unvote -d 'Remove vote from AUR package(s)'
complete -c yay -s v -l vote -d 'Vote for AUR package(s)'
complete -c yay -l save -d 'Causes the following options to be saved back to the config file'
complete -c yay -l aururl -d 'Set an alternative AUR URL'
complete -c yay -l aurrpcurl -d 'Set an alternative URL for the AUR /rpc endpoint'
complete -c yay -l builddir -d 'Directory to use for Building AUR Packages'
complete -c yay -l editor -d 'Editor to use when editing PKGBUILDs'
complete -c yay -l editorflags -d 'Passes arguments to the editor'
complete -c yay -l makepkg -d 'The command to use for makepkg calls'
complete -c yay -l pacman -d 'The command to use for pacman calls'
complete -c yay -l tar -d 'The command to use for bsdtar calls'
complete -c yay -l git -d 'The command to use for git calls'
complete -c yay -l gpg -d 'The command to use for gpg calls'
complete -c yay -l config -d 'The pacman config file to use'
complete -c yay -l makepkgconf -d 'The config file for makepkg to use%'
complete -c yay -l nomakepkgconf -d 'Reset the makepkg config file back to its default'
complete -c yay -l requestsplitn -d 'The maximum amount of packages to request per AUR query'
complete -c yay -l completioninterval -d 'Time in days to refresh the completion cache'
complete -c yay -l sortby -d 'Sort AUR results by a specific field during search'
complete -c yay -l searchby -d 'Search for AUR packages by querying the specified field'
complete -c yay -l answerclean -d 'Set a predetermined answer for the clean build menu question'
complete -c yay -l answerdiff -d 'Set a predetermined answer for the edit diff menu question'
complete -c yay -l answeredit -d 'Set a predetermined answer for the edit pkgbuild menu question'
complete -c yay -l answerupgrade -d 'Set a predetermined answer for the upgrade menu question'
complete -c yay -l noanswerclean -d 'Unset the answer for the clean build menu'
complete -c yay -l noanswerdiff -d 'Unset the answer for the diff menu'
complete -c yay -l noansweredit -d 'Unset the answer for the edit pkgbuild menu'
complete -c yay -l noanswerupgrade -d 'Unset the answer for the upgrade menu'
complete -c yay -l cleanmenu -d 'Show the clean menu'
complete -c yay -l diffmenu -d 'Show the diff menu'
complete -c yay -l editmenu -d 'Show the edit menu'
complete -c yay -l nocleanmenu -d 'Do not show the clean menu'
complete -c yay -l nodiffmenu -d 'Do not show the diff menu'
complete -c yay -l noeditmenu -d 'Do not show the edit menu'
complete -c yay -l askremovemake -d 'Ask to remove makedepends after installing packages'
complete -c yay -l askyesremovemake -d 'Ask to remove makedepends after installing packages(with "Y" as default)'
complete -c yay -l removemake -d 'Remove makedepends after installing packages'
complete -c yay -l noremovemake -d 'Do not remove makedepends after installing packages'
complete -c yay -l topdown -d 'Display repository packages first and then AUR packages'
complete -c yay -l bottomup -d 'Show AUR packages first and then repository packages'
complete -c yay -l singlelineresults -d 'Override pacman\'s usual double-line search result format and list each result…'
complete -c yay -l doublelineresults -d 'Follow pacman\'s double-line search result format and list each result using t…'
complete -c yay -l devel -d 'During sysupgrade also check AUR development packages for updates'
complete -c yay -l nodevel -d 'Do not check for development packages updates during sysupgrade'
complete -c yay -l cleanafter -d 'Remove untracked files after installation'
complete -c yay -l nocleanafter -d 'Do not remove package sources after successful Install'
complete -c yay -l timeupdate -d 'During sysupgrade also compare the build time of installed packages against t…'
complete -c yay -l notimeupdate -d 'Do not consider build times during sysupgrade'
complete -c yay -l separatesources -d 'Separate query results by source, AUR and sync'
complete -c yay -l noseparatesources -d 'Do not separate query results by source for searching'
complete -c yay -l redownload -d 'Always download pkgbuilds of targets even when a copy is available in cache'
complete -c yay -l redownloadall -d 'Always download pkgbuilds of all AUR packages even when a copy is available i…'
complete -c yay -l noredownload -d 'When downloading pkgbuilds if the pkgbuild is found in cache and is equal or …'
complete -c yay -l provides -d 'Look for matching providers when searching for AUR packages'
complete -c yay -l noprovides -d 'Do not look for matching providers when searching for AUR packages'
complete -c yay -l pgpfetch -d 'Prompt to import unknown PGP keys from the validpgpkeys field of each PKGBUILD'
complete -c yay -l nopgpfetch -d 'Do not prompt to import unknown PGP keys'
complete -c yay -l useask -d 'Use pacman\'s --ask flag to automatically confirm package conflicts'
complete -c yay -l nouseask -d 'Manually resolve package conflicts during the install'
complete -c yay -l combinedupgrade -d 'During sysupgrade, Yay will first perform a refresh, then show its combined m…'
complete -c yay -l nocombinedupgrade -d 'During sysupgrade, Pacman -Syu will be called, then the AUR upgrade will start'
complete -c yay -l batchinstall -d 'When building and installing AUR packages instead of installing each package …'
complete -c yay -l nobatchinstall -d 'Always install AUR packages immediately after building them'
complete -c yay -l rebuild -d 'Always build target packages even when a copy is available in cache'
complete -c yay -l rebuildall -d 'Always build all AUR packages even when a copy is available in cache'
complete -c yay -l rebuildtree -d 'When installing an AUR package rebuild and reinstall all of its AUR dependenc…'
complete -c yay -l norebuild -d 'When building packages if the package is found in cache and is an equal versi…'
complete -c yay -l mflags -d 'Passes arguments to makepkg'
complete -c yay -l gpgflags -d 'Passes arguments to gpg'
complete -c yay -l sudo -d 'The command to use for sudo calls'
complete -c yay -l sudoflags -d 'Passes arguments to sudo'
complete -c yay -l sudoloop -d 'Loop sudo calls in the background to prevent sudo from timing out during long…'
complete -c yay -l nosudoloop -d 'Do not loop sudo calls in the background'

